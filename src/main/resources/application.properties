# Configuration file
# key = value
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %X{requestID} %s%e%n

# Adicao de tags para todas as metricas a primeira e para todas, a segunda apenas para teste
mp.metrics.tags=app=${quarkus.application.name},version=${quarkus.application.version}
%test.mp.metrics.tags=app=app-test,version=1.0.0

# Filtro para adicionar os responses de erro no openapi(swagger)
mp.openapi.filter=br.com.bb.dev.ext.filters.OpenApiFilter

# Configuracao do caminho para acessar a documentacao da aplicacao em swagger
quarkus.swagger-ui.path=/api-docs

# Configuracao do jaeger para execucao no profile de test do quarkus
%test.quarkus.jaeger.service-name=bbdev
%test.quarkus.jaeger.sampler-type=const
%test.quarkus.jaeger.sampler-param=1
%test.quarkus.jaeger.agent-host-port=jaeger:5778
quarkus.datasource.db-kind=db2
quarkus.http.cors=true
quarkus.http.cors.origins=http://foo.com,http://www.bar.io
quarkus.http.cors.methods=GET,PUT,POST
quarkus.http.cors.headers=X-Custom
quarkus.http.cors.exposed-headers=Content-Disposition
quarkus.http.cors.access-control-max-age=24H

# Configuracao para ser utilizada no profile de test do quarkus
# Nesse caso ele vai usar esse banco quando for executar os testes
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:exemplo;INIT=RUNSCRIPT FROM 'classpath:scripts/carga_testes.sql'
%test.quarkus.datasource.username=sa
%test.quarkus.datasource.password=sa
%test.quarkus.datasource.db-kind=h2
# Ativando metricas de conexao de banco de dados
quarkus.datasource.jdbc.enable-metrics=true